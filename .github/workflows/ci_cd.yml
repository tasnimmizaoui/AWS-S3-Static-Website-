name: Deploy the static website
on:
  workflow_dispatch:

# Prevent concurrent Deployments to avoid conflicts:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform-plan:
    name: terraform-plan
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      

      - name: Terraform format check
        run: terraform fmt -check -recursive

      - name: Terraform init
        run: terraform init
        env:
          # Terraform Cloud token should be passed via the setup-terraform action
          # but we can also set it as an environment variable
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
        

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION || 'eu-north-1' }}
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan


  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    environment: dev
    needs: terraform-plan

    # Only run on main branch pushes (not pull requests)
    if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.1
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -input=false tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION || 'eu-north-1' }}
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}


      - name: Output website URL
        run: |
          echo "Website URL: $(terraform output -raw website_url)"
