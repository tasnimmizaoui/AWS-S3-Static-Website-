name: Destroy Infrastructure

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  destroy:
    name: Destroy Terraform Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_wrapper : false 
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


      - name: Terraform Init
        run: terraform init
       # working-directory: ./terraform

      - name: Verify Terraform State 
        run: | 
          echo "üìã Checking Terraform state..." 
          terraform state list
          echo "‚úÖ State verification complete"
        #working-directory: ./terraform

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false
        #working-directory: ./terraform

      - name: Verify the Distruction of the AWS resources 
        run: |
          echo "üîç Verifying resources were destroyed..."
          # Check S3 buckets
          echo "S3 Buckets:"
          BUCKETS=$(aws s3api list-buckets --query "Buckets[?contains(Name, '${{ vars.project_name }}')].Name" --output text)
          if [ -n "$BUCKETS" ]; then
            echo "‚ùå Buckets still exist: $BUCKETS"
            exit 1
          else
            echo "‚úÖ No S3 buckets found"
          fi
          
          # Check CloudFront distributions
          echo "CloudFront Distributions:"
          DISTRIBUTIONS=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Comment, '${{ vars.project_name }}')].Id" --output text)
          if [ -n "$DISTRIBUTIONS" ]; then
            echo "‚ùå CloudFront distributions still exist: $DISTRIBUTIONS"
            exit 1
          else
            echo "‚úÖ No CloudFront distributions found"
          fi
          
          echo "üéâ All resources successfully destroyed!"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION || 'eu-north-1' }}
