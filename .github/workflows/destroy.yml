name: Destroy Infrastructure

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  destroy:
    name: Destroy Terraform Infrastructure
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform_wrapper: false 
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION || 'eu-north-1' }}

      - name: Terraform Init
        run: terraform init
      
      - name: Verify Terraform State 
        run: | 
           echo "üìã Checking Terraform state..." 
           terraform state list
           echo "‚úÖ State verification complete"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false

      - name: Verify the Destruction of the AWS resources 
        run: |
          echo "üîç Verifying resources were destroyed..."
          
          # Check S3 buckets
          echo "S3 Buckets:"
          BUCKETS=$(aws s3api list-buckets --query "Buckets[?contains(Name, '${{ vars.project_name }}')].Name" --output text)
          if [ -n "$BUCKETS" ]; then
            echo "‚ùå Buckets still exist: $BUCKETS"
            exit 1
          else
            echo "‚úÖ No S3 buckets found"
          fi
          
          # Check CloudFront distributions
          echo "CloudFront Distributions:"
          DISTRIBUTIONS_JSON=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Comment, '${{ vars.project_name }}')].{Id:Id,Status:Status}" --output json)
          
          # Check if the result is null or empty array
          if [ -z "$DISTRIBUTIONS_JSON" ] || [ "$DISTRIBUTIONS_JSON" = "null" ] || [ "$DISTRIBUTIONS_JSON" = "[]" ]; then
            echo "‚úÖ No CloudFront distributions found"
          else
            echo "CloudFront distributions found:"
            echo "$DISTRIBUTIONS_JSON" | jq -r '.[] | "\(.Id): \(.Status)"'
            
            # Check if any are still "Deployed" (active)
            ACTIVE_DISTS=$(echo "$DISTRIBUTIONS_JSON" | jq -r '.[] | select(.Status == "Deployed") | .Id' 2>/dev/null || true)
            
            if [ -n "$ACTIVE_DISTS" ]; then
              echo "‚ùå Active CloudFront distributions still exist: $ACTIVE_DISTS"
              exit 1
            else
              echo "‚úÖ All distributions are in process of being deleted"
            fi
          fi
          
          echo "‚úÖ Resource verification completed successfully"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION || 'eu-north-1' }}